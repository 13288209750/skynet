<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--这是我们曾经经常使用的配置-->
    <!-- ################################### Start ####################################### -->
    <!--<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">-->
        <!--<property name="dataSource" ref="myDataSource"></property>-->
        <!--<property name="configLocation"-->
                  <!--value="classpath:mybatis-config.xml"></property>-->
    <!--</bean>-->

    <!--<bean id="dataDao" class="org.mybatis.spring.mapper.MapperScannerConfigurer">-->
        <!--<property name="basePackage" value="com.hdg.dao"></property>-->
        <!--<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>-->
    <!--</bean>-->
    <!-- ################################### END ####################################### -->

    <!-- spring和MyBatis完美整合，不需要mybatis-config.xml的配置映射文件 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <!--已废弃-->
        <!--<property name="configLocation"  value="classpath:mybatis-config.xml"/>-->
        <!--替代上面的配置-->
        <property name="typeAliasesPackage" value="com.hdg.entity"></property>
        <!-- 自动扫描mapping.xml文件，**表示迭代查找,也可在sqlMapConfig.xml中单独指定xml文件-->
        <!--它表示我们的Mapper文件存放的位置，当我们的Mapper文件跟对应的Mapper接口处于同一位置的时候可以不用指定该属性的值。-->
        <property name="mapperLocations" value="classpath:com/hdg/entity/*.xml" />
    </bean>

    <!-- mybatis spring sqlSessionTemplate,使用时直接让spring注入即可 -->
    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="sqlSessionFactory"></constructor-arg>
    </bean>
</beans>